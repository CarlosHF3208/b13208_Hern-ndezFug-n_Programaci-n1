/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package arquer_a;
import java.util.Scanner;
/**
 *
 * @author Carlos
 */
public class Arquer_a {
    
    
    
    
    
    
    public static void main(String[] args) {
        
        
        Scanner sc= new Scanner (System.in);
        
      Arqueros.SetNivelJugador(Arqueros.AsignarNivel());
        
        
        
        
        
        System.out.println("Por favor digite 1 para jugar con una interfaz, dos para jugar sin ella");
       
        
        
        int menu0= sc.nextInt();
        
        
        
    boolean jugar=true;
    
    
    
    while(jugar=true){
        
     System.out.println("1.Iniciar nueva partida ");
     System.out.println("2.Ver puntaje mas alto" );
     System.out.println("3.Configurar cantidad de sets");
     System.out.println("4.Configurar cantidad de lanzamiento."); 
     System.out.println("5.Salir.");
     
     
     int menu1= sc.nextInt();
     
     
     if(menu1==1){
     
         
         Arqueros.SetNivelComputadora(Arqueros.AsignarNivel());
         
         
         
     
     for(int v=1; v<=Juez.GetSets();v++){
     
         Viento.SetNivelViento();
         Viento.GenerarDirecci_on();
     System.out.println("Inicia el set "+v);
     
     for(int z=1; z<=Juez.GetLanzamientos();z++){
     //lanzamientos dentro de un mismo set
     
      System.out.println("Inicia el lanzamiento "+z);
      
       double[] coordenadasC00=new double[2];
       double[] coordenadasJ0=new double[2];
       double[] coordenadasC0=new double[2];
       double[] coordenadasJ1=new double[2];
       double[] coordenadasC1=new double[2];
       double[] coordenadasJ2=new double[2];
       double[] coordenadasC2=new double[2];
       
       Viento.GenerarIntensidad();
       System.out.println("Por favor ingrese las coordenada x"); 
       coordenadasJ0[0]= Math.round(100*sc.nextDouble());
       coordenadasJ0[0]= coordenadasJ0[0]/100;
       System.out.println("Por favor ingrese la coordenada y");  
      coordenadasJ0[1]= Math.round(100*sc.nextDouble());
      coordenadasJ0[1]= coordenadasJ0[1]/100;
      coordenadasJ1=Arqueros.TiroConError(coordenadasJ0,Arqueros.GetNivelJugador());
      coordenadasJ2=Viento.TiroConViento(coordenadasJ1);

      System.out.println("El jugador intenta tirar al punto ("+ coordenadasJ0[0]+","+coordenadasJ0[1]+")"); 
      System.out.println("Dada su experiencia, tira al punto ("+ coordenadasJ1[0]+","+coordenadasJ1[1]+")");
      System.out.println("Sin embargo, el viento desvía su tiro al punto ("+ coordenadasJ2[0]+","+coordenadasJ2[1]+")");
     
     System.out.println("El jugador obtiene "+ Blanco.AsignarPuntaje(coordenadasJ2) +" puntos");
     
     Juez.SetPuntajeSetJugador(Juez.GetPuntajeSetJugador()+Blanco.AsignarPuntaje(coordenadasJ2));
     
     Juez.SetPuntajeTotal(Juez.GetPuntajeTotal()+Blanco.AsignarPuntaje(coordenadasJ2));
     
  
       System.out.println("Ahora es el turno de la IA"); 
       coordenadasC00=Arqueros.IA((int) (Math.random()));
       coordenadasC0[0]= Math.round(100*coordenadasC00[0]);
       coordenadasC0[0]= coordenadasC0[0]/100;
         
      coordenadasC0[1]= Math.round(100*coordenadasC00[1]);
      coordenadasC0[1]= coordenadasC0[1]/100;
      coordenadasC1=Arqueros.TiroConError(coordenadasC0,Arqueros.GetNivelComputadora() );
      coordenadasC2=Viento.TiroConViento(coordenadasC1);

      System.out.println("La computadora intenta apuntar a la coordenada("+ coordenadasC0[0]+","+coordenadasC0[1]+")"); 
      System.out.println("Dada su experiencia, la flecha se dirige a ("+ coordenadasC1[0]+","+coordenadasC1[1]+")");
      System.out.println("Sin embargo, el viento desvía su tiro al punto ("+ coordenadasC2[0]+","+coordenadasC2[1]+")");
     
     System.out.println("La computadora obtiene  "+ Blanco.AsignarPuntaje(coordenadasC2) +" puntos");
     
     Juez.SetPuntajeSetComputadora(Juez.GetPuntajeSetComputadora()+Blanco.AsignarPuntaje(coordenadasC2));
     
    
     
     
     
     
    
     
     }
     
      System.out.println("Ha terminado un set");
      System.out.println("Los puntos obtenidos por el jugador fueron "+ Juez.GetPuntajeSetJugador());
      System.out.println("Los puntos obtenidos por la computadora fueron "+ Juez.GetPuntajeSetComputadora());
      
      if(Juez.GetPuntajeSetJugador()>Juez.GetPuntajeSetComputadora()){
      
      System.out.println("El Jugador ha ganado este set");
      
      Juez.SetSetsGanadosJugador(Juez.GetSetsGanadosJugador()+1);
      
      }
      
      
       if(Juez.GetPuntajeSetJugador()<Juez.GetPuntajeSetComputadora()){
      
      
       System.out.println("La computadora ha ganado este set");
       Juez.SetSetsGanadosComputadora(Juez.GetSetsGanadosComputadora()+1);
      
      }
       
        if(Juez.GetPuntajeSetJugador()==Juez.GetPuntajeSetComputadora()){
      
      
       System.out.println("Hay un empate");
      
      
      }
      
      Juez.ResetearContadorPuntosSet();
      
     
     
     
     }
     
     
     
     if(Juez.GetSetsGanadosJugador()>Juez.GetSetsGanadosComputadora()){
      
      System.out.println("Felicidades! El Jugador ha ganado!");
      
      Juez.SetSetsGanadosJugador(Juez.GetSetsGanadosJugador()+1);
      
      }
      
      
       if(Juez.GetSetsGanadosJugador()<Juez.GetSetsGanadosComputadora()){
      
      System.out.println("La computadora ha ganado");
      
      }
       
        if(Juez.GetSetsGanadosJugador()==Juez.GetSetsGanadosComputadora()){
      
      
       System.out.println("Hay un empate. Se debe de ir a muerte súbita");
      
      
       
       
       
       
       
       
       
       
       //Muerte súbida
       
       
       boolean MuerteS_bita=true;
        Viento.SetNivelViento();
         Viento.GenerarDirecci_on();
       
       while(MuerteS_bita==true){
           
       double[] coordenadasC00=new double[2];
       double[] coordenadasJ0=new double[2];
       double[] coordenadasC0=new double[2];
       double[] coordenadasJ1=new double[2];
       double[] coordenadasC1=new double[2];
       double[] coordenadasJ2=new double[2];
       double[] coordenadasC2=new double[2];
       
       Viento.GenerarIntensidad();
       System.out.println("Por favor ingrese las coordenada x"); 
       coordenadasJ0[0]= Math.round(100*sc.nextDouble());
       coordenadasJ0[0]= coordenadasJ0[0]/100;
       System.out.println("Por favor ingrese la coordenada y");  
      coordenadasJ0[1]= Math.round(100*sc.nextDouble());
      coordenadasJ0[1]= coordenadasJ0[1]/100;
      coordenadasJ1=Arqueros.TiroConError(coordenadasJ0,Arqueros.GetNivelJugador());
      coordenadasJ2=Viento.TiroConViento(coordenadasJ1);

      System.out.println("El jugador intenta tirar al punto ("+ coordenadasJ0[0]+","+coordenadasJ0[1]+")"); 
      System.out.println("Dada su experiencia, tira al punto ("+ coordenadasJ1[0]+","+coordenadasJ1[1]+")");
      System.out.println("Sin embargo, el viento desvía su tiro al punto ("+ coordenadasJ2[0]+","+coordenadasJ2[1]+")");
     
     System.out.println("El jugador obtiene "+ Blanco.AsignarPuntaje(coordenadasJ2) +" puntos");
     
      
        
  
       System.out.println("Ahora es el turno de la IA"); 
       coordenadasC00=Arqueros.IA((int) (Math.random()));
       coordenadasC0[0]= Math.round(100*coordenadasC00[0]);
       coordenadasC0[0]= coordenadasC0[0]/100;
         
      coordenadasC0[1]= Math.round(100*coordenadasC00[1]);
      coordenadasC0[1]= coordenadasC0[1]/100;
      coordenadasC1=Arqueros.TiroConError(coordenadasC0,Arqueros.GetNivelComputadora() );
      coordenadasC2=Viento.TiroConViento(coordenadasC1);

      System.out.println("La computadora intenta apuntar a la coordenada("+ coordenadasC0[0]+","+coordenadasC0[1]+")"); 
      System.out.println("Dada su experiencia, la flecha se dirige a ("+ coordenadasC1[0]+","+coordenadasC1[1]+")");
      System.out.println("Sin embargo, el viento desvía su tiro al punto ("+ coordenadasC2[0]+","+coordenadasC2[1]+")");
     
     System.out.println("La computadora obtiene  "+ Blanco.AsignarPuntaje(coordenadasC2) +" puntos");
     
    if(Blanco.AsignarPuntaje(coordenadasJ2) > Blanco.AsignarPuntaje(coordenadasC2) )    
    {
        
        
       System.out.println("El jugador ha ganado! Felicidades! " );
       MuerteS_bita=false; 
        
    }
    
    if(Blanco.AsignarPuntaje(coordenadasJ2) < Blanco.AsignarPuntaje(coordenadasC2) )    
    {
        
        
       System.out.println("La computadora ha ganado " );
       MuerteS_bita=false; 
        
    }
         
           
           
           
           
           
       }
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
      }
        
        
        if(Juez.GetMejorPuntaje()<Juez.GetPuntajeTotal()){
        
        Juez.SetMejorPuntaje(Juez.GetPuntajeTotal());
        
        
        }
     
     Juez.SetPuntajeTotal(0); //Se resetea el contador total para usarse en otra partida
     
     
     
     //Acá se debe definir un ganador global. De no haberlo debe de haber un sudden death
     
     
     
     }
     
     
     
       if(menu1==2){
       
       
       
       
       
       
       
       
       
       
       
       
       }
     
     
     
     
     
     if(menu1==2){Juez.ImprimirRecords();}
     
     
     
    if(menu1==3){System.out.println("Actualmente la cantidad de sets es de " +Juez.GetSets()+". ¿Desea modificarlos? Presione S para Sí o N para No");
     System.out.println("Atención: si modifica los sets, el record de mejor puntuación se reiniciará");
     String menu3= sc.next();
    
     while (!"S".equals(menu3) && !"N".equals(menu3) && !"s".equals(menu3) && !"n".equals(menu3)){
     
     
     System.out.println("Por favor digite una entrada válida");
     
     menu3= sc.next();
     
     }
     
     
     if( "S".equals(menu3) ||"s".equals(menu3)){ 
     System.out.println("Por favor digite la cantidad de sets que desea. Debe ser un número entre 1 y 10");
     
     int NuevoSets= sc.nextInt();
     
     while(NuevoSets>10 || NuevoSets<1){
      System.out.println("Por favor digite la cantidad de sets que desea. Debe ser un número entre 1 y 10");
     
       NuevoSets= sc.nextInt();
       
     }
     if(NuevoSets!=Juez.GetSets()){Juez.ResetearMejorPuntaje();}
     Juez.SetSets(NuevoSets);
     
     };
     
     
     
    } 
      
    if(menu1==4){System.out.println("Actualmente la cantidad de lanzamientos es de " +Juez.GetLanzamientos()+". ¿Desea modificarlos? Presione S para sí o N para no");
    
    System.out.println("Atención: si modifica los lanzamientos, el record de mejor puntuación se reiniciará"); 
    
     String menu4= sc.next();
   
     while (!"S".equals(menu4) && !"N".equals(menu4) && !"s".equals(menu4) && !"n".equals(menu4)){
     
     
     System.out.println("Por favor digite una entrada válida");
     
     menu4= sc.next();
     
     }
     
     
     if( "S".equals(menu4) ||"s".equals(menu4)){ 
     System.out.println("Por favor digite la cantidad de lanzamientos que desea. Debe ser un número entre 1 y 10");
     
     int NuevoLanzamientos= sc.nextInt();
     
     while(NuevoLanzamientos>10 || NuevoLanzamientos<1){
      System.out.println("Por favor digite la cantidad de sets que desea. Debe ser un número entre 1 y 10");
     
       NuevoLanzamientos= sc.nextInt();
       
     }
     if(NuevoLanzamientos!=Juez.GetLanzamientos()){Juez.ResetearMejorPuntaje();}
     Juez.SetLanzamientos(NuevoLanzamientos);
     
     };

     
     
     
     
    
    }
     
     
     if(menu1==5){System.exit( 0 );}
     
      
    }
        
        
    }
    
    
    
    
    }
    
    
    
    
    
    
   
